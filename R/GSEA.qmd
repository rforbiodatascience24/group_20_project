---
title: "GSEA"
author: Antoine Andréoletti, Olivier Gaufrès, Amy Surry, Lea Skytthe, Trine Søgaard
format:
  html:
    embed-resources: true
editor: visual
---

# Gene Set Enrichment Analysis (GSEA)

## Load libraries

```{r}
library("msigdbr")
library("fgsea")
library("dplyr")
```

## Data preparation

To perform Gene Set Enrichment Analysis we have to prepare data by ranking the genes and creating gene sets.

To rank the genes, we use "stat" column from the DESeq2 results. The stat column represents the test statistic and provides a standardized measure of how differentially expressed each gene is.

Furthermore, we remove potentially missing values.

```{r}
# Create list of ranked genes including names
ranked_genes <- res_df$stat
names(ranked_genes) <- rownames(res)

# Remove missing values
ranked_genes<- ranked_genes[!is.na(ranked_genes)]

```

## Gene Set Enrichment Analysis

Before performing the GSEA, we need to divide the genes into gene sets. Using the msigdbr package, the gene sets are fetched. We use category "C5" meaning gene ontology (GO) terms.

```{r}
# Get gene sets
gene_sets <- msigdbr(species = "Homo sapiens", category = "C5")

# Reorganize gene sets 
gene_sets <- split(x = gene_sets$gene_symbol, f = gene_sets$gs_name)

```

From this we get the variable gene_sets, which is a named list, where each entry is a gene set (identified by gs_name) containing a vector of gene symbols.

To perform the GSEA, we use the fgsea package. The function tests each gene set for significant enrichment in high- or low-ranking genes.

Pathways specifies the gene sets to be tested (the list created above) and stats provides the ranked list of genes based on the stat values (test statistic) from differential expression.

```{r}
#| message: false

fgsea_res <- fgsea(pathways = gene_sets,
                   stats = ranked_genes)
```

Now we want to look further into the top 5 most significantly enriched pathways identified by fgsea.

```{r}
topPathways <- fgsea_res |> 
  filter(padj < 0.05) |> 
  arrange(desc(NES)) |> 
  slice(1:5)
```

```{r}
ggplot(topPathways,
       mapping = aes(x = reorder(pathway, NES), y = NES)) +
  geom_col() +
  coord_flip()+
  labs(x = "Pathway",
       y = "Normalized Enrichment Scores (NES)",
       title = "Top 5 Enriched Pathways")+
  theme_minimal()
```
