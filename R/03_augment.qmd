---
title: "Augment data"
author: Antoine Andréoletti, Olivier Gaufrès, Amy Surry, Lea Skytthe, Trine Søgaard
format:
  html:
    embed-resources: true
editor: visual
---

```{r}
#| echo: false
#| message: false

rm(list = ls())
library("tidyverse")
library("dplyr")
library("biomaRt")
```

## Augment data

Loading the cleaned data

```{r}
#| message: false

metadata <- read_csv("../data/02_metadata_clean.csv")
count_data <- read_csv("../data/02_count_data_clean.csv")

```

### Meta data

```{r}

metadata |>
  sample_n(size = 5)
```

Renaming the columns of the cleaned meta data to be more meaningful

```{r}
#| label: clean-metadata-renaming-columns

metadata <- metadata |> 
  dplyr::rename(
    source_name = Source.Name,
    individual = Characteristics.individual.,
    age = Characteristics.age.,
    sex = Characteristics.sex.,
    disease = Characteristics.disease.,
    data_file = Derived.Array.Data.File,
    clinical_information = Factor.Value.clinical.information.
  )
```

Removing excluded people from the data set

```{r}
metadata <- metadata |> 
  filter(disease != "excluded")
```

Viewing the cleaned and augmented meta data

```{r}
metadata |>
  sample_n(size = 5)
```

Saving the augmented metadata file

```{r}

write_csv(metadata, file = file.path("../data/03_metadata_aug.csv"))
```

### Count data

Relocating the `source_name` column to be the first column.

```{r}

count_data <- count_data |>
  relocate(source_name)

count_data |> 
  sample_n(size = 5)
```

Renaming the "Name" column

```{r}
#| message: false

count_data <- count_data |>
  dplyr::rename(transcript_ID = Name)

count_data |>
  sample_n(size = 5)
```

Removing the version numbers from the transcript IDs

```{r}
# Removing version number (.X)
count_data <- count_data |>
  mutate(transcript_ID = str_remove(transcript_ID, "\\.\\d+$"))

```

Getting the genes from the transcript IDs

```{r}
# Set up the Ensembl BioMart connection
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")

# Example list of Ensembl transcript IDs
transcript_ids <- count_data$transcript_ID

result <- getBM(
  attributes = c("ensembl_transcript_id", "ensembl_gene_id", "hgnc_symbol"),
  filters = "ensembl_transcript_id",
  values = transcript_ids,
  mart = ensembl
)

result
```

Including the gene IDs and HUGO Gene Nomenclature Committee (HGNC) symbols

```{r}
#| warning: false

# Renaming "ensembl_transcript_id" in result to mach "transcript_ID" in count_data
result <- result |> 
  dplyr::rename(transcript_ID = ensembl_transcript_id)

# Removing any leading and/or trailing spaces
count_data <- count_data |> 
  mutate(transcript_ID = str_trim(transcript_ID))
result <- result |> 
  mutate(transcript_ID = str_trim(transcript_ID))


# Combine result with count_data based on transcript_ID
count_data_combined <- count_data |> 
  left_join(result, by = "transcript_ID")

count_data_combined |>
  sample_n(size = 5)
```

Renaming and relocating the new columns

```{r}
count_data_combined <- count_data_combined |>
  dplyr::rename(gene_id = ensembl_gene_id,
                gene_symbol = hgnc_symbol)

count_data_combined <- count_data_combined |>
  dplyr::relocate(gene_id, gene_symbol, .after = transcript_ID)

# Check the result
count_data_combined |> 
  sample_n(size = 5)
```

Replacing missing values with NA

```{r}
# count_data_combined <- count_data_combined |>
#   dplyr::mutate(gene_symbol = na_if(gene_symbol, ""))

```

Saving the augmented count_data file

```{r}

write_csv(count_data_combined, file = file.path("../data/03_count_data_aug.csv"))
```

```{r}




count_data_combined <- count_data_combined |>
  filter(source_name %in% metadata$source_name)
```
