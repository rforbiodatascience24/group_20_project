---
title: "05_analysis_1"
author: Antoine Andréoletti (s242830), Olivier Gaufrès (s243252), Amy Surry (s201902), Lea Skytthe (s203531), Trine Søgaard (s204655)
format:
  html:
    embed-resources: true
editor: visual
---

# PCA

#### Libraries

```{r}
#| label: 05_load-libraries
#| message: False
#| warning: False

rm(list=ls())

library("tidyverse")
library("broom")
library("cowplot")
library("ggrepel")
library("patchwork")
```

#### Data load

```{r}
#| label: 05_load-data

data_pheno <- read.csv("../data/03_metadata_aug.csv")

data_counts.total <- read.csv("../data/03_count_data_wide_aug.csv", 
                              check.names = FALSE)

# make matrix of count data
data_counts <- data_counts.total |>
  dplyr::select(-gene_id, -gene_symbol, -transcript_ID) |>
  mutate(across(where(is.numeric), as.integer))


# Doing the PCA
pca_fit <- data_counts |>
  scale() |> # scaling data
  t() |> # transpose data
  prcomp() # make the PCA
```

We would like to:

1.  Look at the variance explained by each PC.

2.  Look at the data in PC coordinates.

3.  Look at the rotation matrix.

#### The variance by each PC

```{r}
#| label: 05_variance-of-components

pca_fit |>
  tidy(matrix = "eigenvalues") |>
  filter(percent > 0.005) |> 
  ggplot(aes(x = PC, 
             y = percent)) +
  geom_col(fill = "#56B4E9", color = "black") +
  scale_x_continuous(breaks = 1:length(data_counts)) +
  scale_y_continuous(labels = scales::percent_format(),
                     expand = expansion(mult = c(0, 0.01))) +
  theme_minimal_hgrid(12) +
  labs(title = "Variance explained by each components",
       x = "Principal Component",
       y = "Percentage of variance") +
  theme(plot.title = element_text(hjust = 0.5))

# Extract the percentage of variance explained by each PC
variance_explained <- pca_fit |>
  tidy(matrix = "eigenvalues") |>
  filter(PC %in% c(1, 2)) |>
  dplyr::select(PC, percent)

```

#### The data in PC coordinates

```{r}
#| label: 05_applying-pca
#| message: False
#| warning: False

coord_pca <- pca_fit |>
  augment(data_pheno) |> # add metadata
  mutate(label_points = ifelse(
    (.fittedPC1 < -50 & .fittedPC2 > 10) | (.fittedPC1 > 50 & .fittedPC2 > 15), 
    source_name, NA)) |>  #new variable to specify which points should be labeled
  ggplot(aes(x = .fittedPC1, 
             y = .fittedPC2, 
             shape = clinical_information,
             col = disease, 
             label = label_points)) + 
    geom_point(size = 3) + 
    geom_text_repel() +
    labs(title = "PCA of gene expression in patients",
         x = paste("PC1 (", round(variance_explained$percent[1] * 100, 2), "%)", 
                   sep = ""),
         y = paste("PC2 (", round(variance_explained$percent[2] * 100, 2), "%)", 
                   sep = ""), 
         color = "Disease", 
         shape = "Clinical information") +
    theme(plot.title = element_text(hjust = 0.5))

coord_pca
```

It is hard to split our patients just using a PCA, we will have to use other tools to look at differences in gene expression between the groups.

#### The rotation matrix

```{r}
#| label: 05_rotation-matrix

# Define arrow style for plotting
arrow_style <- arrow(
  angle = 20, 
  ends = "first", 
  type = "closed", 
  length = grid::unit(8, "pt")
)

# Lets keep only the genes with biggest impact on the PCA
PC1_sorted <- pca_fit |>
  tidy(matrix = "rotation") |>
  pivot_wider(names_from = "PC", 
              names_prefix = "PC", 
              values_from = "value") |> 
  mutate(PC1 = abs(PC1)) |> 
  arrange(desc(PC1)) |> 
  pull(PC1)

biggest_value_PC1 <- PC1_sorted[10]

# Plot rotation matrix
rotation_pca <- pca_fit |>
  tidy(matrix = "rotation") |>
  pivot_wider(names_from = "PC", 
              names_prefix = "PC", 
              values_from = "value") |>
  mutate(column = data_counts.total$gene_symbol) |> 
  filter(PC1 > biggest_value_PC1 | PC1 < - biggest_value_PC1,
         PC2 > biggest_value_PC1 | PC2 < - biggest_value_PC1) |> 
  ggplot(aes(x = PC1, 
             y = PC2)) +
  geom_segment(xend = 0, 
               yend = 0, 
               arrow = arrow_style) +
  geom_text(
    aes(label = column),
    color = "#56B4E9"
  ) +
  coord_fixed() +
  labs(title = "Rotation matrix of most impactful genes",
         x = paste("PC1 (", round(variance_explained$percent[1] * 100, 2), "%)", 
                   sep = ""),
         y = paste("PC2 (", round(variance_explained$percent[2] * 100, 2), "%)", 
                   sep = "")) + 
  theme(plot.title = element_text(hjust = 0.5))

rotation_pca
```

```{r}
#| label: 05_save_plot
#| message: False
#| warning: False
#| fig-asp: 1
#| width: 10
#| include: false

# Combine the two plots
combined_plot <-  coord_pca / rotation_pca

combined_plot
# Save the combined plot as PNG
ggsave("../doc/Pictures_for_presentation/pca_plots_stacked_left.png", plot = combined_plot)
```
