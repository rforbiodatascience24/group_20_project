## PCA

#### Libraries

```{r}
library("tidyverse")
library("broom")  # devtools::install_github("tidymodels/broom")
library("cowplot")
library("ggrepel")
```

#### Data load

```{r}
#| label: load metadata
#| include: false
#| echo: true

metadata <- read.csv("../data/02_metadata_clean.csv", check.names = FALSE)

metadata <- metadata |>
  as_tibble() |>
  select(source_name, age, sex, disease, clinical_information) |>
  filter(disease != "excluded")
```

```{r}
#| label: load-counts
#| include: false

data_counts <- read.csv("../data/03_count_data_wide.csv", check.names = FALSE)

common_samples <- intersect(colnames(data_counts), metadata$source_name)

metadata <- metadata[metadata$source_name %in% common_samples,]
data_counts <- data_counts[,c("Name",common_samples)]

head(data_counts)
```

We would like to:

1.  Look at the data in PC coordinates.

2.  Look at the rotation matrix.

3.  Look at the variance explained by each PC.

#### The data in PC coordinates

```{r}
pca_fit <- data_counts |>
  column_to_rownames(var = "Name") |> 
  scale() |> # scaling data
  t() |> # transpose data
  prcomp() # make the PCA

```

```{r}
pca_fit |>
  augment(metadata) |> # add metadata
  ggplot(aes(.fittedPC1, .fittedPC2, shape=clinical_information, 
                         col=disease, label=source_name)) + 
    geom_point() + 
    #geom_text_repel() +
    labs(x = "PC1" , y = "PC2", color = "Disease", 
         shape = "Clinical information")
```

#### The rotation matrix

```{r}
# extract rotation matrix
pca_fit |>
  tidy(matrix = "rotation")
```

```{r}
# define arrow style for plotting
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

# plot rotation matrix
pca_fit |>
  tidy(matrix = "rotation") |>
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") |>
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#56B4E9"
  ) +
  #xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed() # fix aspect ratio to 1:1
  #theme_minimal_grid(12)

```

#### The variance by each PC

```{r}
pca_fit |>
  tidy(matrix = "eigenvalues")
```

```{r}
pca_fit |>
  tidy(matrix = "eigenvalues") |>
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) +
  theme_minimal_hgrid(12)
```

#### Saving PCA plot

```{r}
ggsave(file.path("../results/05_pca_plot.pdf"))
```
